"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGroupAccess = void 0;
const tslib_1 = require("tslib");
const axios_1 = require("axios");
const helpers_1 = require("../helpers");
const constants_1 = require("../constants");
const helpers_2 = require("./helpers");
const getGroupAccess = (options) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    // Replace "any" with the actual response type
    const { chatId, did, env = constants_1.default.ENV.PROD } = options || {};
    try {
        if (chatId == null || chatId.length === 0) {
            throw new Error(`chatId cannot be null or empty`);
        }
        if (did == null || did.length === 0) {
            throw new Error(`did cannot be null or empty`);
        }
        const user = yield (0, helpers_2.getUserDID)(did, env);
        const API_BASE_URL = (0, helpers_1.getAPIBaseUrls)(env);
        const requestUrl = `${API_BASE_URL}/v1/chat/groups/${chatId}/access/${user}`;
        return axios_1.default
            .get(requestUrl)
            .then((response) => {
            return response.data;
        })
            .catch((err) => {
            var _a, _b;
            if ((_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data)
                throw new Error((_b = err === null || err === void 0 ? void 0 : err.response) === null || _b === void 0 ? void 0 : _b.data);
            throw new Error(err);
        });
    }
    catch (err) {
        console.error(`[Push SDK] - API - Error - API ${exports.getGroupAccess.name} -:  `, err);
        throw Error(`[Push SDK] - API - Error - API ${exports.getGroupAccess.name} -: ${err}`);
    }
});
exports.getGroupAccess = getGroupAccess;
//# sourceMappingURL=getGroupAccess.js.map