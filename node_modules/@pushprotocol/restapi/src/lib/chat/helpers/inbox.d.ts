import { ENV } from '../../constants';
import { IFeeds, IMessageIPFS, IUser, SpaceIFeeds } from '../../types';
type InboxListsType = {
    lists: IFeeds[];
    user: string;
    toDecrypt: boolean;
    pgpPrivateKey?: string;
    env?: ENV;
};
type SpaceInboxListsType = {
    lists: SpaceIFeeds[];
    user: string;
    toDecrypt: boolean;
    pgpPrivateKey?: string;
    env?: ENV;
};
type TrendingSpaceInboxListsType = {
    lists: SpaceIFeeds[];
    env?: ENV;
};
type DecryptConverationType = {
    messages: IMessageIPFS[];
    connectedUser: IUser;
    pgpPrivateKey?: string;
    env?: ENV;
};
export declare const getInboxLists: (options: InboxListsType) => Promise<IFeeds[]>;
export declare const getSpaceInboxLists: (options: SpaceInboxListsType) => Promise<SpaceIFeeds[]>;
export declare const getTrendingSpaceInboxLists: (options: TrendingSpaceInboxListsType) => Promise<SpaceIFeeds[]>;
export declare const decryptConversation: (options: DecryptConverationType) => Promise<IMessageIPFS[]>;
export declare const addDeprecatedInfo: (chats: IFeeds[]) => IFeeds[];
export declare const addDeprecatedInfoToMessages: (chats: IMessageIPFS[]) => IMessageIPFS[];
export {};
