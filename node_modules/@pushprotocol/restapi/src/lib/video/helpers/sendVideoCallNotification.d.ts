import { ENV } from '../../constants';
import { SPACE_ACCEPT_REQUEST_TYPE, SPACE_DISCONNECT_TYPE, SPACE_REQUEST_TYPE, VIDEO_CALL_TYPE } from '../../payloads/constants';
import { SignerType, VideoCallStatus } from '../../types';
interface CallDetailsType {
    type: SPACE_REQUEST_TYPE | SPACE_ACCEPT_REQUEST_TYPE | SPACE_DISCONNECT_TYPE;
    data: Record<string, unknown>;
}
interface VideoCallInfoType {
    recipientAddress: string;
    senderAddress: string;
    chatId: string;
    signalData: any;
    status: VideoCallStatus;
    env?: ENV;
    callType?: VIDEO_CALL_TYPE;
    callDetails?: CallDetailsType;
}
interface UserInfoType {
    signer: SignerType;
    chainId: number;
    pgpPrivateKey: string;
}
export interface VideoDataType {
    recipientAddress: string;
    senderAddress: string;
    chatId: string;
    signalData?: any;
    status: VideoCallStatus;
    callDetails?: CallDetailsType;
}
declare const sendVideoCallNotification: ({ signer, chainId, pgpPrivateKey }: UserInfoType, { recipientAddress, senderAddress, chatId, status, signalData, env, callType, callDetails }: VideoCallInfoType) => Promise<void>;
export default sendVideoCallNotification;
