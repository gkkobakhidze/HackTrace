/// <reference types="node" />
import { EventEmitter } from 'events';
import { ENV } from '../constants';
import { PushStreamInitializeProps, STREAM } from './pushStreamTypes';
import { ProgressHookType, SignerType } from '../types';
export declare class PushStream extends EventEmitter {
    private decryptedPgpPvtKey;
    private signer;
    private _listen;
    private progressHook?;
    private pushChatSocket;
    private pushNotificationSocket;
    private account;
    private raw;
    private options;
    private chatInstance;
    private listen;
    constructor(account: string, decryptedPgpPvtKey: string, signer: SignerType, _listen: STREAM[], options: PushStreamInitializeProps, progressHook?: ((progress: ProgressHookType) => void) | undefined);
    static initialize(account: string, decryptedPgpPvtKey: string, signer: SignerType, listen: STREAM[], env: ENV, progressHook?: (progress: ProgressHookType) => void, options?: PushStreamInitializeProps): Promise<PushStream>;
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    private shouldEmitChat;
    private shouldEmitChannel;
}
